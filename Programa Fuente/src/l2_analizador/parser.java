
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Thu Jul 09 21:56:35 GMT-04:00 2015
//----------------------------------------------------

package l2_analizador;

import java.io.*;
import java.util.*;
import java_cup.runtime.*;

/** CUP v0.10k generated parser.
  * @version Thu Jul 09 21:56:35 GMT-04:00 2015
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\024\000\002\002\004\000\002\003\003\000\002\006" +
    "\002\000\002\007\002\000\002\004\010\000\002\010\002" +
    "\000\002\004\006\000\002\011\002\000\002\004\006\000" +
    "\002\012\002\000\002\004\006\000\002\004\003\000\002" +
    "\004\005\000\002\004\004\000\002\004\002\000\002\005" +
    "\004\000\002\005\004\000\002\005\004\000\002\005\004" +
    "\000\002\005\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\042\000\020\002\ufff3\004\006\006\007\010\ufff3\011" +
    "\ufff3\012\ufff3\015\005\001\002\000\012\002\000\010\016" +
    "\011\014\012\017\001\002\000\014\004\034\005\032\013" +
    "\036\014\031\015\035\001\002\000\016\002\ufff6\007\ufff6" +
    "\010\ufff6\011\ufff6\012\ufff6\015\030\001\002\000\020\004" +
    "\uffff\006\uffff\007\uffff\010\uffff\011\uffff\012\uffff\015\uffff" +
    "\001\002\000\004\002\011\001\002\000\004\002\001\001" +
    "\002\000\020\004\006\006\007\007\ufff3\010\ufff3\011\ufff3" +
    "\012\ufff3\015\005\001\002\000\012\007\015\010\016\011" +
    "\014\012\017\001\002\000\022\002\ufffc\004\ufffc\006\ufffc" +
    "\007\ufffc\010\ufffc\011\ufffc\012\ufffc\015\ufffc\001\002\000" +
    "\022\002\ufffe\004\ufffe\006\ufffe\007\ufffe\010\ufffe\011\ufffe" +
    "\012\ufffe\015\ufffe\001\002\000\022\002\ufffa\004\ufffa\006" +
    "\ufffa\007\ufffa\010\ufffa\011\ufffa\012\ufffa\015\ufffa\001\002" +
    "\000\022\002\ufff8\004\ufff8\006\ufff8\007\ufff8\010\ufff8\011" +
    "\ufff8\012\ufff8\015\ufff8\001\002\000\022\002\ufff3\004\006" +
    "\006\007\007\ufff3\010\ufff3\011\ufff3\012\ufff3\015\005\001" +
    "\002\000\014\002\ufff7\007\ufff7\010\ufff7\011\ufff7\012\ufff7" +
    "\001\002\000\022\002\ufff3\004\006\006\007\007\ufff3\010" +
    "\ufff3\011\ufff3\012\ufff3\015\005\001\002\000\014\002\ufff9" +
    "\007\ufff9\010\ufff9\011\ufff9\012\ufff9\001\002\000\022\002" +
    "\ufff3\004\006\006\007\007\ufff3\010\ufff3\011\ufff3\012\ufff3" +
    "\015\005\001\002\000\014\002\ufffd\007\ufffd\010\016\011" +
    "\014\012\017\001\002\000\022\002\ufff3\004\006\006\007" +
    "\007\ufff3\010\ufff3\011\ufff3\012\ufff3\015\005\001\002\000" +
    "\014\002\ufffb\007\ufffb\010\ufffb\011\ufffb\012\ufffb\001\002" +
    "\000\014\004\034\005\032\013\036\014\031\015\035\001" +
    "\002\000\014\004\034\005\032\013\036\014\031\015\035" +
    "\001\002\000\014\004\034\005\032\013\036\014\031\015" +
    "\035\001\002\000\014\002\ufff5\007\ufff5\010\ufff5\011\ufff5" +
    "\012\ufff5\001\002\000\014\004\034\005\032\013\036\014" +
    "\031\015\035\001\002\000\022\002\ufff3\004\006\006\007" +
    "\007\ufff3\010\ufff3\011\ufff3\012\ufff3\015\005\001\002\000" +
    "\014\004\034\005\032\013\036\014\031\015\035\001\002" +
    "\000\014\002\uffef\007\uffef\010\uffef\011\uffef\012\uffef\001" +
    "\002\000\014\002\uffee\007\uffee\010\uffee\011\uffee\012\uffee" +
    "\001\002\000\014\002\ufff0\007\ufff0\010\ufff0\011\ufff0\012" +
    "\ufff0\001\002\000\014\002\ufff1\007\ufff1\010\ufff1\011\ufff1" +
    "\012\ufff1\001\002\000\014\002\ufff2\007\ufff2\010\ufff2\011" +
    "\ufff2\012\ufff2\001\002\000\014\002\ufff4\007\ufff4\010\ufff4" +
    "\011\ufff4\012\ufff4\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\042\000\006\003\007\004\003\001\001\000\002\001" +
    "\001\000\004\005\043\001\001\000\002\001\001\000\004" +
    "\006\011\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\012\001\001\000\002\001\001\000\004\010\025" +
    "\001\001\000\004\007\023\001\001\000\004\011\021\001" +
    "\001\000\004\012\017\001\001\000\004\004\020\001\001" +
    "\000\002\001\001\000\004\004\022\001\001\000\002\001" +
    "\001\000\004\004\024\001\001\000\002\001\001\000\004" +
    "\004\026\001\001\000\002\001\001\000\004\005\032\001" +
    "\001\000\004\005\042\001\001\000\004\005\041\001\001" +
    "\000\002\001\001\000\004\005\040\001\001\000\004\004" +
    "\037\001\001\000\004\005\036\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public static void main(String args[]) throws Exception{      
        new parser(new Yylex(new FileInputStream(args[0]))).parse();
        
    }

    public static void cargar(String Archivo) throws Exception{      
        new parser(new Yylex(new FileInputStream(Archivo))).parse();
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {



  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // FR ::= COMENTARIO ER 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*FR*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // FR ::= ESPACIO FR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*FR*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // FR ::= BINARIO FR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*FR*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // FR ::= NUM FR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*FR*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // FR ::= LETRA FR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*FR*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ER ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*ER*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ER ::= COMENTARIO FR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*ER*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ER ::= BINARIO COMENTARIO FR 
            {
              Object RESULT = null;
		System.out.print(" /Digito/ "); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*ER*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ER ::= BINARIO 
            {
              Object RESULT = null;
		System.out.print(" /Digito/ "); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*ER*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ER ::= ER CONCATENACION NT$4 ER 
            {
              Object RESULT = null;
              // propagate RESULT from NT$4
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*ER*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // NT$4 ::= 
            {
              Object RESULT = null;
System.out.print(" /Concatenacion/ "); 
              CUP$parser$result = new java_cup.runtime.Symbol(8/*NT$4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ER ::= ER UNION NT$3 ER 
            {
              Object RESULT = null;
              // propagate RESULT from NT$3
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*ER*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NT$3 ::= 
            {
              Object RESULT = null;
System.out.print(" /Union/ "); 
              CUP$parser$result = new java_cup.runtime.Symbol(7/*NT$3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ER ::= ER CLAUSURA NT$2 ER 
            {
              Object RESULT = null;
              // propagate RESULT from NT$2
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*ER*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NT$2 ::= 
            {
              Object RESULT = null;
System.out.print(" /Clausura/ "); 
              CUP$parser$result = new java_cup.runtime.Symbol(6/*NT$2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ER ::= APARTENTESIS NT$0 ER CPARTENTESIS NT$1 ER 
            {
              Object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*ER*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // NT$1 ::= 
            {
              Object RESULT = null;
System.out.print(" /Cierra Parent./ "); 
              CUP$parser$result = new java_cup.runtime.Symbol(5/*NT$1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // NT$0 ::= 
            {
              Object RESULT = null;
System.out.print(" /Abre Parent./ "); 
              CUP$parser$result = new java_cup.runtime.Symbol(4/*NT$0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= ER 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(1/*INICIO*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

